// <auto-generated />
using System;
using CG.DVDCentral.PL2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CG.DVDCentral.PL2.Migrations
{
    [DbContext(typeof(DVDCentralEntities))]
    [Migration("20240206212246_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblCart");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9286104e-78c6-4960-bd38-598cdf1ffa2b"),
                            UserId = new Guid("e9381517-43e7-42b3-ae3c-7161047d3058")
                        },
                        new
                        {
                            Id = new Guid("abaedd05-1693-43fb-8ae8-027e83f838d0"),
                            UserId = new Guid("55220e09-4c53-4f2e-9324-0539d91afba6")
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblCartItem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0a73abb6-c3d4-44a6-941a-7c61e01a8cd4"),
                            CartId = new Guid("9286104e-78c6-4960-bd38-598cdf1ffa2b"),
                            MovieId = new Guid("9e50e81f-6a6c-4bde-876b-d1844706b4cb"),
                            Qty = 1
                        },
                        new
                        {
                            Id = new Guid("6fe1c5be-21a6-4819-9a28-329e250d999a"),
                            CartId = new Guid("9286104e-78c6-4960-bd38-598cdf1ffa2b"),
                            MovieId = new Guid("4d406d3f-f18b-4dab-baaf-2ea5e86dde76"),
                            Qty = 2
                        },
                        new
                        {
                            Id = new Guid("9ca79bdc-ae3e-4958-aa4d-28b449fd6195"),
                            CartId = new Guid("abaedd05-1693-43fb-8ae8-027e83f838d0"),
                            MovieId = new Guid("4d406d3f-f18b-4dab-baaf-2ea5e86dde76"),
                            Qty = 1
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_tblCustomer_Id");

                    b.ToTable("tblCustomer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("66641f9a-782a-4750-ab18-4d5ae1f8fed9"),
                            Address = "453 Oak Street",
                            City = "Fond du Lac",
                            FirstName = "Steve",
                            LastName = "Marin",
                            Phone = "9205879797",
                            State = "WI",
                            UserId = new Guid("e9381517-43e7-42b3-ae3c-7161047d3058"),
                            ZIP = "54935"
                        },
                        new
                        {
                            Id = new Guid("b36d8a97-dbf5-4620-8a02-0f6ccdf0b18e"),
                            Address = "987 Willow Road",
                            City = "Slinger",
                            FirstName = "John",
                            LastName = "Doro",
                            Phone = "9202623345",
                            State = "WI",
                            UserId = new Guid("55220e09-4c53-4f2e-9324-0539d91afba6"),
                            ZIP = "56495"
                        },
                        new
                        {
                            Id = new Guid("2f28c79b-3ee3-41ce-bbec-40ec6c0680a7"),
                            Address = "159 Johnson Avenue",
                            City = "Allenton",
                            FirstName = "Brian",
                            LastName = "Foote",
                            Phone = "9202623415",
                            State = "WI",
                            UserId = new Guid("14a6de53-8b21-4878-a258-03093df3abb8"),
                            ZIP = "53142"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblDirector_Id");

                    b.ToTable("tblDirector", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccf900ea-4ed5-4952-9f9c-46186905f608"),
                            FirstName = "John",
                            LastName = "Avildsen"
                        },
                        new
                        {
                            Id = new Guid("e7515488-bed0-4d89-89e6-5acaa1951334"),
                            FirstName = "Steven",
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = new Guid("28f4523c-6b8e-42cb-9c43-c3dde9d5bcb9"),
                            FirstName = "Rob",
                            LastName = "Reiner"
                        },
                        new
                        {
                            Id = new Guid("0a81c3de-fe0c-4214-aa0e-a4729287ddc4"),
                            FirstName = "George",
                            LastName = "Lucas"
                        },
                        new
                        {
                            Id = new Guid("42a7011e-4d05-482e-9a85-ea83f7c774ca"),
                            FirstName = "Clint",
                            LastName = "Eastwood"
                        },
                        new
                        {
                            Id = new Guid("2d8883f2-9420-42a8-8efe-63c382dd0151"),
                            FirstName = "Other",
                            LastName = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblFormat_Id");

                    b.ToTable("tblFormat", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5677f6b-3bc7-4347-91e7-755f5956d3a6"),
                            Description = "VHS"
                        },
                        new
                        {
                            Id = new Guid("606c44e1-a700-4aea-be02-e6429dfd4eee"),
                            Description = "DVD"
                        },
                        new
                        {
                            Id = new Guid("4d95b3a5-3454-4413-bc6f-54905866a4d2"),
                            Description = "Blu-Ray"
                        },
                        new
                        {
                            Id = new Guid("7208b62a-ddc7-450a-b0af-048352e6442c"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblGenre_Id");

                    b.ToTable("tblGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("27b54b42-8c0d-4e82-8121-b206ca5b082b"),
                            Description = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("95710746-2b31-440d-b8ca-f9fba789030c"),
                            Description = "Action"
                        },
                        new
                        {
                            Id = new Guid("29599a08-add2-4762-ad56-916bd85284ee"),
                            Description = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("eb50c6ba-2137-4f7e-ae32-884f89bb610b"),
                            Description = "Horror"
                        },
                        new
                        {
                            Id = new Guid("dd72ea4b-37ad-4de7-9f11-0f8ad1d25a2e"),
                            Description = "Romance"
                        },
                        new
                        {
                            Id = new Guid("a0f521c0-4692-42cf-83e5-9124794d50d7"),
                            Description = "Documentary"
                        },
                        new
                        {
                            Id = new Guid("97dd6634-205b-44fd-bf8a-c242497ffe2e"),
                            Description = "Musical"
                        },
                        new
                        {
                            Id = new Guid("2d94a56f-9502-4ed2-b5d8-9ccbb18bd055"),
                            Description = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("ce06d48d-a966-4fe9-8354-1f0e98350aa7"),
                            Description = "Western"
                        },
                        new
                        {
                            Id = new Guid("8d94bf52-3592-4f9c-902c-bff858673c66"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("InStkQty")
                        .HasColumnType("int");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_tblMovie_Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("FormatId");

                    b.HasIndex("RatingId");

                    b.ToTable("tblMovie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e50e81f-6a6c-4bde-876b-d1844706b4cb"),
                            Cost = 6.9900000000000002,
                            Description = "Rocky is a 1976 American sports drama film directed by John G. Avildsen, written by and starring Sylvester Stallone.",
                            DirectorId = new Guid("ccf900ea-4ed5-4952-9f9c-46186905f608"),
                            FormatId = new Guid("c5677f6b-3bc7-4347-91e7-755f5956d3a6"),
                            ImagePath = "Rocky.jpg",
                            InStkQty = 2,
                            RatingId = new Guid("a5812862-a380-4f1a-bc10-994dc823d43a"),
                            Title = "Rocky"
                        },
                        new
                        {
                            Id = new Guid("c244d656-dee8-4096-9b3d-5e41205a263c"),
                            Cost = 6.9900000000000002,
                            Description = "Other",
                            DirectorId = new Guid("ccf900ea-4ed5-4952-9f9c-46186905f608"),
                            FormatId = new Guid("c5677f6b-3bc7-4347-91e7-755f5956d3a6"),
                            ImagePath = "Rocky.jpg",
                            InStkQty = 2,
                            RatingId = new Guid("a5812862-a380-4f1a-bc10-994dc823d43a"),
                            Title = "Other"
                        },
                        new
                        {
                            Id = new Guid("4d406d3f-f18b-4dab-baaf-2ea5e86dde76"),
                            Cost = 8.9900000000000002,
                            Description = "Jaws is a 1975 American thriller film directed by Steven Spielberg and based on the Peter Benchley 1974 novel of the same name.",
                            DirectorId = new Guid("e7515488-bed0-4d89-89e6-5acaa1951334"),
                            FormatId = new Guid("606c44e1-a700-4aea-be02-e6429dfd4eee"),
                            ImagePath = "Jaws1.jpg",
                            InStkQty = 1,
                            RatingId = new Guid("6bdf1caa-e8c7-4ae6-8398-980a2c88a25f"),
                            Title = "Jaws"
                        },
                        new
                        {
                            Id = new Guid("1f0ddaaf-73db-493a-955e-f89c33bfb693"),
                            Cost = 12.5,
                            Description = "The Princess Bride is a 1987 American fantasy adventure comedy film directed and co-produced by Rob Reiner, starring Cary Elwes, Robin Wright, Mandy Patinkin, Chris Sarandon, Wallace Shawn, André the Giant, and Christopher Guest.",
                            DirectorId = new Guid("28f4523c-6b8e-42cb-9c43-c3dde9d5bcb9"),
                            FormatId = new Guid("4d95b3a5-3454-4413-bc6f-54905866a4d2"),
                            ImagePath = "PrincessBride.jpg",
                            InStkQty = 4,
                            RatingId = new Guid("8b32b8e3-459f-4091-be26-17aa995c163d"),
                            Title = "The Princess Bride"
                        },
                        new
                        {
                            Id = new Guid("aa00eb37-3304-40a8-9f5f-bcab7a2eace9"),
                            Cost = 10.5,
                            Description = "Indiana Jones and the Last Crusade is a 1989 American action-adventure film directed by Steven Spielberg, from a story co-written by executive producer George Lucas.",
                            DirectorId = new Guid("0a81c3de-fe0c-4214-aa0e-a4729287ddc4"),
                            FormatId = new Guid("4d95b3a5-3454-4413-bc6f-54905866a4d2"),
                            ImagePath = "IndianaJonesLastCrusade.jpg",
                            InStkQty = 2,
                            RatingId = new Guid("e387bd75-ddc0-49d2-b1a6-b3c2c7c99ce7"),
                            Title = "Indiana Jones and the Last Crusade"
                        },
                        new
                        {
                            Id = new Guid("6d6a6859-896f-4798-828e-3f6cc69496e7"),
                            Cost = 7.5,
                            Description = "Star Wars: Episode IV – A New Hope is a 1977 American epic space-opera film written and directed by George Lucas, produced by Lucasfilm and distributed by 20th Century Fox.",
                            DirectorId = new Guid("e7515488-bed0-4d89-89e6-5acaa1951334"),
                            FormatId = new Guid("606c44e1-a700-4aea-be02-e6429dfd4eee"),
                            ImagePath = "StarWarsNewHope.jpg",
                            InStkQty = 1,
                            RatingId = new Guid("6bdf1caa-e8c7-4ae6-8398-980a2c88a25f"),
                            Title = "Star Wars: Episode IV – A New Hope"
                        },
                        new
                        {
                            Id = new Guid("02773329-62c0-49fd-8fc2-d7c41334b117"),
                            Cost = 9.9900000000000002,
                            Description = "Pale Rider is a 1985 American Western film produced and directed by Clint Eastwood, who also stars in the lead role.",
                            DirectorId = new Guid("e7515488-bed0-4d89-89e6-5acaa1951334"),
                            FormatId = new Guid("606c44e1-a700-4aea-be02-e6429dfd4eee"),
                            ImagePath = "PaleRider.jpg",
                            InStkQty = 1,
                            RatingId = new Guid("6bdf1caa-e8c7-4ae6-8398-980a2c88a25f"),
                            Title = "Pale Rider"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblMovieGenre_Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblMovieGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f451281-a45e-44fb-bebc-726dcb630c8a"),
                            GenreId = new Guid("29599a08-add2-4762-ad56-916bd85284ee"),
                            MovieId = new Guid("9e50e81f-6a6c-4bde-876b-d1844706b4cb")
                        },
                        new
                        {
                            Id = new Guid("9fcb8104-4ceb-4f8f-b421-1399fe34846e"),
                            GenreId = new Guid("eb50c6ba-2137-4f7e-ae32-884f89bb610b"),
                            MovieId = new Guid("9e50e81f-6a6c-4bde-876b-d1844706b4cb")
                        },
                        new
                        {
                            Id = new Guid("b33cbf64-faa1-4e5e-941a-f182b2676887"),
                            GenreId = new Guid("a0f521c0-4692-42cf-83e5-9124794d50d7"),
                            MovieId = new Guid("9e50e81f-6a6c-4bde-876b-d1844706b4cb")
                        },
                        new
                        {
                            Id = new Guid("ad9f88ab-7b3e-4372-a5f6-ef2bbc82dcaa"),
                            GenreId = new Guid("29599a08-add2-4762-ad56-916bd85284ee"),
                            MovieId = new Guid("4d406d3f-f18b-4dab-baaf-2ea5e86dde76")
                        },
                        new
                        {
                            Id = new Guid("d32b96b2-c152-4cec-83fe-2b2b0acc3c3e"),
                            GenreId = new Guid("eb50c6ba-2137-4f7e-ae32-884f89bb610b"),
                            MovieId = new Guid("4d406d3f-f18b-4dab-baaf-2ea5e86dde76")
                        },
                        new
                        {
                            Id = new Guid("e873a54d-7111-44a2-bbde-876d2ad39c53"),
                            GenreId = new Guid("27b54b42-8c0d-4e82-8121-b206ca5b082b"),
                            MovieId = new Guid("1f0ddaaf-73db-493a-955e-f89c33bfb693")
                        },
                        new
                        {
                            Id = new Guid("87666faa-6336-47e9-8c6a-e2b8e9a43103"),
                            GenreId = new Guid("95710746-2b31-440d-b8ca-f9fba789030c"),
                            MovieId = new Guid("1f0ddaaf-73db-493a-955e-f89c33bfb693")
                        },
                        new
                        {
                            Id = new Guid("895adb00-eca9-415d-8a54-75eab1b8b45a"),
                            GenreId = new Guid("a0f521c0-4692-42cf-83e5-9124794d50d7"),
                            MovieId = new Guid("1f0ddaaf-73db-493a-955e-f89c33bfb693")
                        },
                        new
                        {
                            Id = new Guid("960473fc-50f3-4f8b-8d87-fb7bc07df8c6"),
                            GenreId = new Guid("eb50c6ba-2137-4f7e-ae32-884f89bb610b"),
                            MovieId = new Guid("aa00eb37-3304-40a8-9f5f-bcab7a2eace9")
                        },
                        new
                        {
                            Id = new Guid("e35ee8be-4fac-46de-9c56-ebb342e7315a"),
                            GenreId = new Guid("a0f521c0-4692-42cf-83e5-9124794d50d7"),
                            MovieId = new Guid("aa00eb37-3304-40a8-9f5f-bcab7a2eace9")
                        },
                        new
                        {
                            Id = new Guid("ccfd18f4-0856-42a9-8153-b129ba0df32c"),
                            GenreId = new Guid("eb50c6ba-2137-4f7e-ae32-884f89bb610b"),
                            MovieId = new Guid("6d6a6859-896f-4798-828e-3f6cc69496e7")
                        },
                        new
                        {
                            Id = new Guid("b4d32263-7096-4026-bf34-cf72d0ec736a"),
                            GenreId = new Guid("97dd6634-205b-44fd-bf8a-c242497ffe2e"),
                            MovieId = new Guid("6d6a6859-896f-4798-828e-3f6cc69496e7")
                        },
                        new
                        {
                            Id = new Guid("68815e41-729a-4951-8731-7b43a1c4806a"),
                            GenreId = new Guid("2d94a56f-9502-4ed2-b5d8-9ccbb18bd055"),
                            MovieId = new Guid("02773329-62c0-49fd-8fc2-d7c41334b117")
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("tblCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblOrder_Id");

                    b.HasIndex("tblCustomerId");

                    b.ToTable("tblOrder", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9cf93090-9751-49b7-94d9-8cbd3ab493d6"),
                            CustomerId = new Guid("b36d8a97-dbf5-4620-8a02-0f6ccdf0b18e"),
                            OrderDate = new DateTime(2017, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2017, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("55220e09-4c53-4f2e-9324-0539d91afba6")
                        },
                        new
                        {
                            Id = new Guid("34451a94-1593-4050-9f3d-8e05da9f07aa"),
                            CustomerId = new Guid("2f28c79b-3ee3-41ce-bbec-40ec6c0680a7"),
                            OrderDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("55220e09-4c53-4f2e-9324-0539d91afba6")
                        },
                        new
                        {
                            Id = new Guid("a0127e27-d5ec-4519-aba7-ed6507c54977"),
                            CustomerId = new Guid("2f28c79b-3ee3-41ce-bbec-40ec6c0680a7"),
                            OrderDate = new DateTime(2022, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2022, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("14a6de53-8b21-4878-a258-03093df3abb8")
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblOrderItem_Id");

                    b.ToTable("tblOrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("953f9875-2c30-4a6d-b868-42f1de30bed8"),
                            Cost = 8.9900000000000002,
                            MovieId = new Guid("9e50e81f-6a6c-4bde-876b-d1844706b4cb"),
                            OrderId = new Guid("9cf93090-9751-49b7-94d9-8cbd3ab493d6"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("7ab47bba-858f-4378-90a2-f4554840f41e"),
                            Cost = 9.9900000000000002,
                            MovieId = new Guid("4d406d3f-f18b-4dab-baaf-2ea5e86dde76"),
                            OrderId = new Guid("9cf93090-9751-49b7-94d9-8cbd3ab493d6"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("08bb136e-3d00-4577-8bd4-82345a9849fe"),
                            Cost = 10.99,
                            MovieId = new Guid("4d406d3f-f18b-4dab-baaf-2ea5e86dde76"),
                            OrderId = new Guid("34451a94-1593-4050-9f3d-8e05da9f07aa"),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblRating_Id");

                    b.ToTable("tblRating", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5812862-a380-4f1a-bc10-994dc823d43a"),
                            Description = "G"
                        },
                        new
                        {
                            Id = new Guid("6bdf1caa-e8c7-4ae6-8398-980a2c88a25f"),
                            Description = "PG-13"
                        },
                        new
                        {
                            Id = new Guid("8b32b8e3-459f-4091-be26-17aa995c163d"),
                            Description = "PG"
                        },
                        new
                        {
                            Id = new Guid("e387bd75-ddc0-49d2-b1a6-b3c2c7c99ce7"),
                            Description = "R"
                        },
                        new
                        {
                            Id = new Guid("7db805dd-fc52-4994-9b28-a5592e39218a"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9381517-43e7-42b3-ae3c-7161047d3058"),
                            FirstName = "Steve",
                            LastName = "Marin",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "smarin"
                        },
                        new
                        {
                            Id = new Guid("55220e09-4c53-4f2e-9324-0539d91afba6"),
                            FirstName = "John",
                            LastName = "Doro",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("14a6de53-8b21-4878-a258-03093df3abb8"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "bfoote"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblDirector", "Director")
                        .WithMany("tblMovies")
                        .HasForeignKey("DirectorId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_DirectorId");

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblFormat", "Format")
                        .WithMany("tblMovies")
                        .HasForeignKey("FormatId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_FormatId");

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblRating", "Rating")
                        .WithMany("tblMovies")
                        .HasForeignKey("RatingId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_RatingId");

                    b.Navigation("Director");

                    b.Navigation("Format");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblGenre", "Genre")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_GenreId");

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_MovieId");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblCustomer", null)
                        .WithMany("Orders")
                        .HasForeignKey("tblCustomerId");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Navigation("tblMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
