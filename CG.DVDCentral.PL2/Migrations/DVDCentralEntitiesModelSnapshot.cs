// <auto-generated />
using System;
using CG.DVDCentral.PL2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CG.DVDCentral.PL2.Migrations
{
    [DbContext(typeof(DVDCentralEntities))]
    partial class DVDCentralEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblCart");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6243a011-04f7-440c-93b7-7fdce551df05"),
                            UserId = new Guid("9506e295-178c-40e8-844f-54ef9bb6f99d")
                        },
                        new
                        {
                            Id = new Guid("380bb522-c76f-444c-bbb5-148db08a3ba5"),
                            UserId = new Guid("3b1e3451-68fc-418c-8f8c-53fca468510f")
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblCartItem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3017df47-30ae-4767-893c-03dcc6b6cef7"),
                            CartId = new Guid("6243a011-04f7-440c-93b7-7fdce551df05"),
                            MovieId = new Guid("51692ea9-aeff-40b5-b4ee-9634e87506ed"),
                            Qty = 1
                        },
                        new
                        {
                            Id = new Guid("547dd683-43ab-406c-a3f0-7ce25cb298b4"),
                            CartId = new Guid("6243a011-04f7-440c-93b7-7fdce551df05"),
                            MovieId = new Guid("98a25359-07b4-4b07-a533-b3ae2609d06c"),
                            Qty = 2
                        },
                        new
                        {
                            Id = new Guid("84d189de-668b-4320-8751-11f0e66a8f5d"),
                            CartId = new Guid("380bb522-c76f-444c-bbb5-148db08a3ba5"),
                            MovieId = new Guid("98a25359-07b4-4b07-a533-b3ae2609d06c"),
                            Qty = 1
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_tblCustomer_Id");

                    b.ToTable("tblCustomer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7f97369-c98a-4be8-9752-ca0d4a15c1e5"),
                            Address = "453 Oak Street",
                            City = "Fond du Lac",
                            FirstName = "Steve",
                            LastName = "Marin",
                            Phone = "9205879797",
                            State = "WI",
                            UserId = new Guid("9506e295-178c-40e8-844f-54ef9bb6f99d"),
                            ZIP = "54935"
                        },
                        new
                        {
                            Id = new Guid("d0b82509-ef1a-437d-a3cc-c944cbfc03e2"),
                            Address = "987 Willow Road",
                            City = "Slinger",
                            FirstName = "John",
                            LastName = "Doro",
                            Phone = "9202623345",
                            State = "WI",
                            UserId = new Guid("3b1e3451-68fc-418c-8f8c-53fca468510f"),
                            ZIP = "56495"
                        },
                        new
                        {
                            Id = new Guid("67c6816d-c550-4572-90c0-40c2196fd524"),
                            Address = "159 Johnson Avenue",
                            City = "Allenton",
                            FirstName = "Brian",
                            LastName = "Foote",
                            Phone = "9202623415",
                            State = "WI",
                            UserId = new Guid("242689f9-8371-48c8-a6d1-4a550b8ced7e"),
                            ZIP = "53142"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblDirector_Id");

                    b.ToTable("tblDirector", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f3a8e8c-3199-4348-ae3a-a7c46dcb4619"),
                            FirstName = "John",
                            LastName = "Avildsen"
                        },
                        new
                        {
                            Id = new Guid("b9bf3d82-022a-4c18-8e58-788cd20b5a6b"),
                            FirstName = "Steven",
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = new Guid("50e3badf-7759-4b27-9c76-6305ac95c1fe"),
                            FirstName = "Rob",
                            LastName = "Reiner"
                        },
                        new
                        {
                            Id = new Guid("43974b5e-fbb2-4590-93ee-aef621263256"),
                            FirstName = "George",
                            LastName = "Lucas"
                        },
                        new
                        {
                            Id = new Guid("9a3b6291-6aee-4eac-bb71-a415a5b4611d"),
                            FirstName = "Clint",
                            LastName = "Eastwood"
                        },
                        new
                        {
                            Id = new Guid("bdbb9125-4af7-4b54-b959-612bead99064"),
                            FirstName = "Other",
                            LastName = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblFormat_Id");

                    b.ToTable("tblFormat", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d208541-5881-486c-afe2-59cbbea10532"),
                            Description = "VHS"
                        },
                        new
                        {
                            Id = new Guid("ffd3b0af-b421-450d-86f1-67135ca742f3"),
                            Description = "DVD"
                        },
                        new
                        {
                            Id = new Guid("f9b4a0b4-eeab-474f-916e-832f82e70d87"),
                            Description = "Blu-Ray"
                        },
                        new
                        {
                            Id = new Guid("60c9acca-26d1-4d8a-8049-91565fb9e37e"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblGenre_Id");

                    b.ToTable("tblGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c09a72e-2b91-4a2a-82ad-0eb0e36d909d"),
                            Description = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("4debd424-f6eb-4640-9a1b-71c6d4596c46"),
                            Description = "Action"
                        },
                        new
                        {
                            Id = new Guid("ceece509-7c31-457d-8b9c-9ed2b9a5ccd7"),
                            Description = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("646aae24-d4b5-47fd-b7d2-141d8caa69c4"),
                            Description = "Horror"
                        },
                        new
                        {
                            Id = new Guid("719de0fd-75d3-45ee-8448-6d7972cdc60b"),
                            Description = "Romance"
                        },
                        new
                        {
                            Id = new Guid("e0ba8221-48ad-49a8-af92-45fc3c2abb48"),
                            Description = "Documentary"
                        },
                        new
                        {
                            Id = new Guid("789a851b-6030-4abe-b125-959c862a0f58"),
                            Description = "Musical"
                        },
                        new
                        {
                            Id = new Guid("04bc70ea-273b-43e0-bacf-d734ad4e15d3"),
                            Description = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("9c535db9-6376-493e-a2d1-ef4e5418d686"),
                            Description = "Western"
                        },
                        new
                        {
                            Id = new Guid("eb10643f-0491-4361-802c-265d4cff72eb"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("InStkQty")
                        .HasColumnType("int");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_tblMovie_Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("FormatId");

                    b.HasIndex("RatingId");

                    b.ToTable("tblMovie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("51692ea9-aeff-40b5-b4ee-9634e87506ed"),
                            Cost = 6.9900000000000002,
                            Description = "Rocky is a 1976 American sports drama film directed by John G. Avildsen, written by and starring Sylvester Stallone.",
                            DirectorId = new Guid("8f3a8e8c-3199-4348-ae3a-a7c46dcb4619"),
                            FormatId = new Guid("4d208541-5881-486c-afe2-59cbbea10532"),
                            ImagePath = "Rocky.jpg",
                            InStkQty = 2,
                            RatingId = new Guid("b301512a-4f3b-42f4-99c8-c3ce30c4718d"),
                            Title = "Rocky"
                        },
                        new
                        {
                            Id = new Guid("bed7a1e8-f790-4e49-a8d5-3893bbe59a00"),
                            Cost = 6.9900000000000002,
                            Description = "Other",
                            DirectorId = new Guid("8f3a8e8c-3199-4348-ae3a-a7c46dcb4619"),
                            FormatId = new Guid("4d208541-5881-486c-afe2-59cbbea10532"),
                            ImagePath = "Rocky.jpg",
                            InStkQty = 2,
                            RatingId = new Guid("b301512a-4f3b-42f4-99c8-c3ce30c4718d"),
                            Title = "Other"
                        },
                        new
                        {
                            Id = new Guid("98a25359-07b4-4b07-a533-b3ae2609d06c"),
                            Cost = 8.9900000000000002,
                            Description = "Jaws is a 1975 American thriller film directed by Steven Spielberg and based on the Peter Benchley 1974 novel of the same name.",
                            DirectorId = new Guid("b9bf3d82-022a-4c18-8e58-788cd20b5a6b"),
                            FormatId = new Guid("ffd3b0af-b421-450d-86f1-67135ca742f3"),
                            ImagePath = "Jaws1.jpg",
                            InStkQty = 1,
                            RatingId = new Guid("6980bed4-9feb-4b46-80ed-85ee00bfda9c"),
                            Title = "Jaws"
                        },
                        new
                        {
                            Id = new Guid("9dcf9ec0-8914-4efb-a4f5-7b0d999d0290"),
                            Cost = 12.5,
                            Description = "The Princess Bride is a 1987 American fantasy adventure comedy film directed and co-produced by Rob Reiner, starring Cary Elwes, Robin Wright, Mandy Patinkin, Chris Sarandon, Wallace Shawn, André the Giant, and Christopher Guest.",
                            DirectorId = new Guid("50e3badf-7759-4b27-9c76-6305ac95c1fe"),
                            FormatId = new Guid("f9b4a0b4-eeab-474f-916e-832f82e70d87"),
                            ImagePath = "PrincessBride.jpg",
                            InStkQty = 4,
                            RatingId = new Guid("ab395cfc-b037-425b-a015-fe6a21ebd881"),
                            Title = "The Princess Bride"
                        },
                        new
                        {
                            Id = new Guid("1af1ac16-0984-4d72-8445-f85d0c7a5f62"),
                            Cost = 10.5,
                            Description = "Indiana Jones and the Last Crusade is a 1989 American action-adventure film directed by Steven Spielberg, from a story co-written by executive producer George Lucas.",
                            DirectorId = new Guid("43974b5e-fbb2-4590-93ee-aef621263256"),
                            FormatId = new Guid("f9b4a0b4-eeab-474f-916e-832f82e70d87"),
                            ImagePath = "IndianaJonesLastCrusade.jpg",
                            InStkQty = 2,
                            RatingId = new Guid("5014f080-022a-4bc8-93e7-f5764c26c4d8"),
                            Title = "Indiana Jones and the Last Crusade"
                        },
                        new
                        {
                            Id = new Guid("1fca65be-9be3-4c52-8b7d-94cb545df6b1"),
                            Cost = 7.5,
                            Description = "Star Wars: Episode IV – A New Hope is a 1977 American epic space-opera film written and directed by George Lucas, produced by Lucasfilm and distributed by 20th Century Fox.",
                            DirectorId = new Guid("b9bf3d82-022a-4c18-8e58-788cd20b5a6b"),
                            FormatId = new Guid("ffd3b0af-b421-450d-86f1-67135ca742f3"),
                            ImagePath = "StarWarsNewHope.jpg",
                            InStkQty = 1,
                            RatingId = new Guid("6980bed4-9feb-4b46-80ed-85ee00bfda9c"),
                            Title = "Star Wars: Episode IV – A New Hope"
                        },
                        new
                        {
                            Id = new Guid("e426f7bf-60c9-472e-a73d-b8203813d702"),
                            Cost = 9.9900000000000002,
                            Description = "Pale Rider is a 1985 American Western film produced and directed by Clint Eastwood, who also stars in the lead role.",
                            DirectorId = new Guid("b9bf3d82-022a-4c18-8e58-788cd20b5a6b"),
                            FormatId = new Guid("ffd3b0af-b421-450d-86f1-67135ca742f3"),
                            ImagePath = "PaleRider.jpg",
                            InStkQty = 1,
                            RatingId = new Guid("6980bed4-9feb-4b46-80ed-85ee00bfda9c"),
                            Title = "Pale Rider"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblMovieGenre_Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblMovieGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3fc171d-4d55-47d1-8731-34bc6f5a92e0"),
                            GenreId = new Guid("ceece509-7c31-457d-8b9c-9ed2b9a5ccd7"),
                            MovieId = new Guid("51692ea9-aeff-40b5-b4ee-9634e87506ed")
                        },
                        new
                        {
                            Id = new Guid("6a905489-69a5-4a38-8d2c-8ab453ba1660"),
                            GenreId = new Guid("646aae24-d4b5-47fd-b7d2-141d8caa69c4"),
                            MovieId = new Guid("51692ea9-aeff-40b5-b4ee-9634e87506ed")
                        },
                        new
                        {
                            Id = new Guid("b43e336d-c2fb-45c1-83e6-6fa8aba324dc"),
                            GenreId = new Guid("e0ba8221-48ad-49a8-af92-45fc3c2abb48"),
                            MovieId = new Guid("51692ea9-aeff-40b5-b4ee-9634e87506ed")
                        },
                        new
                        {
                            Id = new Guid("7245313d-a82a-439a-8d90-f126e9b69ab6"),
                            GenreId = new Guid("ceece509-7c31-457d-8b9c-9ed2b9a5ccd7"),
                            MovieId = new Guid("98a25359-07b4-4b07-a533-b3ae2609d06c")
                        },
                        new
                        {
                            Id = new Guid("9245a676-c91f-4058-903f-585bf49dd603"),
                            GenreId = new Guid("646aae24-d4b5-47fd-b7d2-141d8caa69c4"),
                            MovieId = new Guid("98a25359-07b4-4b07-a533-b3ae2609d06c")
                        },
                        new
                        {
                            Id = new Guid("bcc472db-86f6-41e9-aa2d-a3cad984b766"),
                            GenreId = new Guid("9c09a72e-2b91-4a2a-82ad-0eb0e36d909d"),
                            MovieId = new Guid("9dcf9ec0-8914-4efb-a4f5-7b0d999d0290")
                        },
                        new
                        {
                            Id = new Guid("1726a40d-ba67-435e-8330-7cbf33b4defc"),
                            GenreId = new Guid("4debd424-f6eb-4640-9a1b-71c6d4596c46"),
                            MovieId = new Guid("9dcf9ec0-8914-4efb-a4f5-7b0d999d0290")
                        },
                        new
                        {
                            Id = new Guid("c7a3d867-54ce-4248-997c-cbe83e1ee29c"),
                            GenreId = new Guid("e0ba8221-48ad-49a8-af92-45fc3c2abb48"),
                            MovieId = new Guid("9dcf9ec0-8914-4efb-a4f5-7b0d999d0290")
                        },
                        new
                        {
                            Id = new Guid("d7f7f33d-0059-4da9-966d-e1ba763d712a"),
                            GenreId = new Guid("646aae24-d4b5-47fd-b7d2-141d8caa69c4"),
                            MovieId = new Guid("1af1ac16-0984-4d72-8445-f85d0c7a5f62")
                        },
                        new
                        {
                            Id = new Guid("d6b67385-2784-4b07-bac2-77a927e426b4"),
                            GenreId = new Guid("e0ba8221-48ad-49a8-af92-45fc3c2abb48"),
                            MovieId = new Guid("1af1ac16-0984-4d72-8445-f85d0c7a5f62")
                        },
                        new
                        {
                            Id = new Guid("8d0e35b5-c3a5-4b8f-8308-f4d91df3f3b0"),
                            GenreId = new Guid("646aae24-d4b5-47fd-b7d2-141d8caa69c4"),
                            MovieId = new Guid("1fca65be-9be3-4c52-8b7d-94cb545df6b1")
                        },
                        new
                        {
                            Id = new Guid("0e3d0e05-7113-4c34-b7f5-3385e058f5c3"),
                            GenreId = new Guid("789a851b-6030-4abe-b125-959c862a0f58"),
                            MovieId = new Guid("1fca65be-9be3-4c52-8b7d-94cb545df6b1")
                        },
                        new
                        {
                            Id = new Guid("0a3b358c-2417-43a1-a631-7229177582ef"),
                            GenreId = new Guid("04bc70ea-273b-43e0-bacf-d734ad4e15d3"),
                            MovieId = new Guid("e426f7bf-60c9-472e-a73d-b8203813d702")
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("tblCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblOrder_Id");

                    b.HasIndex("tblCustomerId");

                    b.ToTable("tblOrder", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("78840159-afbb-43e7-9b5a-139a75f9a464"),
                            CustomerId = new Guid("d0b82509-ef1a-437d-a3cc-c944cbfc03e2"),
                            OrderDate = new DateTime(2017, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2017, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("3b1e3451-68fc-418c-8f8c-53fca468510f")
                        },
                        new
                        {
                            Id = new Guid("c844d857-aa0d-4f41-9af5-51c5f8b9b108"),
                            CustomerId = new Guid("67c6816d-c550-4572-90c0-40c2196fd524"),
                            OrderDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("3b1e3451-68fc-418c-8f8c-53fca468510f")
                        },
                        new
                        {
                            Id = new Guid("791f1778-ad3d-42f3-bdaa-42661204a72d"),
                            CustomerId = new Guid("67c6816d-c550-4572-90c0-40c2196fd524"),
                            OrderDate = new DateTime(2022, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2022, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("242689f9-8371-48c8-a6d1-4a550b8ced7e")
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblOrderItem_Id");

                    b.ToTable("tblOrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4964e876-d589-47d1-8802-9ec858572431"),
                            Cost = 8.9900000000000002,
                            MovieId = new Guid("51692ea9-aeff-40b5-b4ee-9634e87506ed"),
                            OrderId = new Guid("78840159-afbb-43e7-9b5a-139a75f9a464"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("6cedf6f6-b8b0-4d3a-9f7f-811edc0f8860"),
                            Cost = 9.9900000000000002,
                            MovieId = new Guid("98a25359-07b4-4b07-a533-b3ae2609d06c"),
                            OrderId = new Guid("78840159-afbb-43e7-9b5a-139a75f9a464"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("549fcfa1-fbe1-4dc8-90d9-b6f21009ab70"),
                            Cost = 10.99,
                            MovieId = new Guid("98a25359-07b4-4b07-a533-b3ae2609d06c"),
                            OrderId = new Guid("c844d857-aa0d-4f41-9af5-51c5f8b9b108"),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblRating_Id");

                    b.ToTable("tblRating", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b301512a-4f3b-42f4-99c8-c3ce30c4718d"),
                            Description = "G"
                        },
                        new
                        {
                            Id = new Guid("6980bed4-9feb-4b46-80ed-85ee00bfda9c"),
                            Description = "PG-13"
                        },
                        new
                        {
                            Id = new Guid("ab395cfc-b037-425b-a015-fe6a21ebd881"),
                            Description = "PG"
                        },
                        new
                        {
                            Id = new Guid("5014f080-022a-4bc8-93e7-f5764c26c4d8"),
                            Description = "R"
                        },
                        new
                        {
                            Id = new Guid("0135de36-ab7e-4dc2-9723-ce5e85eb7a2d"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9506e295-178c-40e8-844f-54ef9bb6f99d"),
                            FirstName = "Steve",
                            LastName = "Marin",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "smarin"
                        },
                        new
                        {
                            Id = new Guid("3b1e3451-68fc-418c-8f8c-53fca468510f"),
                            FirstName = "John",
                            LastName = "Doro",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("242689f9-8371-48c8-a6d1-4a550b8ced7e"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "bfoote"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblDirector", "Director")
                        .WithMany("tblMovies")
                        .HasForeignKey("DirectorId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_DirectorId");

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblFormat", "Format")
                        .WithMany("tblMovies")
                        .HasForeignKey("FormatId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_FormatId");

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblRating", "Rating")
                        .WithMany("tblMovies")
                        .HasForeignKey("RatingId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_RatingId");

                    b.Navigation("Director");

                    b.Navigation("Format");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblGenre", "Genre")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_GenreId");

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_MovieId");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblCustomer", null)
                        .WithMany("Orders")
                        .HasForeignKey("tblCustomerId");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Navigation("tblMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
