// <auto-generated />
using System;
using CG.DVDCentral.PL2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CG.DVDCentral.PL2.Migrations
{
    [DbContext(typeof(DVDCentralEntities))]
    [Migration("20240305190140_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblCart");

                    b.HasData(
                        new
                        {
                            Id = new Guid("528e76f5-2b45-4ae7-bf40-d3956198da92"),
                            UserId = new Guid("6613b086-b951-43e2-b907-33b7f887d2e8")
                        },
                        new
                        {
                            Id = new Guid("4ecb02ac-fe41-4233-baa7-d94a987293c5"),
                            UserId = new Guid("f17436a8-c5eb-45d8-9e2f-d1fe47605788")
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblCartItem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30452b0e-24fd-4a3c-b812-1ea54306223e"),
                            CartId = new Guid("528e76f5-2b45-4ae7-bf40-d3956198da92"),
                            MovieId = new Guid("3d370bd2-7387-44cc-b5af-53ed5dda59f1"),
                            Qty = 1
                        },
                        new
                        {
                            Id = new Guid("d5c1453d-fa52-4393-adfb-417b63e79f11"),
                            CartId = new Guid("528e76f5-2b45-4ae7-bf40-d3956198da92"),
                            MovieId = new Guid("e2e500e2-042e-4753-978e-1f689c71de62"),
                            Qty = 2
                        },
                        new
                        {
                            Id = new Guid("3a593afe-023e-4ab9-a545-df900058b76f"),
                            CartId = new Guid("4ecb02ac-fe41-4233-baa7-d94a987293c5"),
                            MovieId = new Guid("e2e500e2-042e-4753-978e-1f689c71de62"),
                            Qty = 1
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_tblCustomer_Id");

                    b.ToTable("tblCustomer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd4b4a89-b684-4118-ab96-1031aa0efa6c"),
                            Address = "453 Oak Street",
                            City = "Fond du Lac",
                            FirstName = "Steve",
                            LastName = "Marin",
                            Phone = "9205879797",
                            State = "WI",
                            UserId = new Guid("6613b086-b951-43e2-b907-33b7f887d2e8"),
                            ZIP = "54935"
                        },
                        new
                        {
                            Id = new Guid("489c9a88-15cf-4874-8a4b-a8120f4a3a69"),
                            Address = "987 Willow Road",
                            City = "Slinger",
                            FirstName = "John",
                            LastName = "Doro",
                            Phone = "9202623345",
                            State = "WI",
                            UserId = new Guid("f17436a8-c5eb-45d8-9e2f-d1fe47605788"),
                            ZIP = "56495"
                        },
                        new
                        {
                            Id = new Guid("5fe58522-a21f-44b2-93b7-48c1d0f60bd2"),
                            Address = "159 Johnson Avenue",
                            City = "Allenton",
                            FirstName = "Brian",
                            LastName = "Foote",
                            Phone = "9202623415",
                            State = "WI",
                            UserId = new Guid("f065f2ba-3d3d-48e0-98f2-7e5f52c75852"),
                            ZIP = "53142"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblDirector_Id");

                    b.ToTable("tblDirector", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7220c09e-e524-4bb8-aa0d-c211f0f2d3d7"),
                            FirstName = "John",
                            LastName = "Avildsen"
                        },
                        new
                        {
                            Id = new Guid("b1e9807d-0ca3-42ac-a24e-fb9f2d37a79a"),
                            FirstName = "Steven",
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = new Guid("b8ce006b-3fad-4930-ac76-d1e7e975c2ff"),
                            FirstName = "Rob",
                            LastName = "Reiner"
                        },
                        new
                        {
                            Id = new Guid("70c60603-ea68-4bdd-a41f-98aa3376cc48"),
                            FirstName = "George",
                            LastName = "Lucas"
                        },
                        new
                        {
                            Id = new Guid("7b43c1fe-3469-4667-b240-7eee57a215da"),
                            FirstName = "Clint",
                            LastName = "Eastwood"
                        },
                        new
                        {
                            Id = new Guid("0fa78be9-abc0-4ad3-8ca5-4979aae5eb83"),
                            FirstName = "Other",
                            LastName = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblFormat_Id");

                    b.ToTable("tblFormat", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c2a1791-3ed9-4832-9b7e-315b612f9ead"),
                            Description = "VHS"
                        },
                        new
                        {
                            Id = new Guid("77551c26-daad-4bd6-9953-004989ba4f40"),
                            Description = "DVD"
                        },
                        new
                        {
                            Id = new Guid("675c1a01-426c-4484-a674-c21eab575325"),
                            Description = "Blu-Ray"
                        },
                        new
                        {
                            Id = new Guid("46869db3-53ce-4968-a7fc-5bac849088a4"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblGenre_Id");

                    b.ToTable("tblGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0bcfcc24-7d24-47ea-8573-5dcdd8a35db6"),
                            Description = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("b4c7ff04-7c46-41e3-949b-56bad56f4829"),
                            Description = "Action"
                        },
                        new
                        {
                            Id = new Guid("b35d5db0-babc-4e50-bf2c-d1fe268e5118"),
                            Description = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("9e200592-0399-4e36-9e91-306ed9a5d38b"),
                            Description = "Horror"
                        },
                        new
                        {
                            Id = new Guid("0dd595c3-6504-4669-b02c-0ccacada5572"),
                            Description = "Romance"
                        },
                        new
                        {
                            Id = new Guid("f50e39e2-6653-45c8-9fa6-49382578ae6c"),
                            Description = "Documentary"
                        },
                        new
                        {
                            Id = new Guid("517c8cb2-cfb5-4dda-b3eb-9d04840ba8c5"),
                            Description = "Musical"
                        },
                        new
                        {
                            Id = new Guid("d7b28d30-4f84-4530-9003-682c280ee35c"),
                            Description = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("104f40f9-c257-4567-bc5d-a1ad4bbf3cd7"),
                            Description = "Western"
                        },
                        new
                        {
                            Id = new Guid("0fb6185a-bfd9-4ddc-839d-d05f185fdab3"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_tblMovie_Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("FormatId");

                    b.HasIndex("RatingId");

                    b.ToTable("tblMovie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d370bd2-7387-44cc-b5af-53ed5dda59f1"),
                            Cost = 6.9900000000000002,
                            Description = "Rocky is a 1976 American sports drama film directed by John G. Avildsen, written by and starring Sylvester Stallone.",
                            DirectorId = new Guid("7220c09e-e524-4bb8-aa0d-c211f0f2d3d7"),
                            FormatId = new Guid("7c2a1791-3ed9-4832-9b7e-315b612f9ead"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("692c95fc-44cc-49ad-9719-26ca9e0cf84f"),
                            Title = "Rocky"
                        },
                        new
                        {
                            Id = new Guid("fa97268e-975c-433a-ba6a-4d6f34c88e31"),
                            Cost = 6.9900000000000002,
                            Description = "Other",
                            DirectorId = new Guid("7220c09e-e524-4bb8-aa0d-c211f0f2d3d7"),
                            FormatId = new Guid("7c2a1791-3ed9-4832-9b7e-315b612f9ead"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("692c95fc-44cc-49ad-9719-26ca9e0cf84f"),
                            Title = "Other"
                        },
                        new
                        {
                            Id = new Guid("e2e500e2-042e-4753-978e-1f689c71de62"),
                            Cost = 8.9900000000000002,
                            Description = "Jaws is a 1975 American thriller film directed by Steven Spielberg and based on the Peter Benchley 1974 novel of the same name.",
                            DirectorId = new Guid("b1e9807d-0ca3-42ac-a24e-fb9f2d37a79a"),
                            FormatId = new Guid("77551c26-daad-4bd6-9953-004989ba4f40"),
                            ImagePath = "Jaws1.jpg",
                            Quantity = 1,
                            RatingId = new Guid("b9431834-b4a7-4331-b27b-d7b87bcc163a"),
                            Title = "Jaws"
                        },
                        new
                        {
                            Id = new Guid("8ece9ad5-9bba-4596-8a81-a761322e1700"),
                            Cost = 12.5,
                            Description = "The Princess Bride is a 1987 American fantasy adventure comedy film directed and co-produced by Rob Reiner, starring Cary Elwes, Robin Wright, Mandy Patinkin, Chris Sarandon, Wallace Shawn, André the Giant, and Christopher Guest.",
                            DirectorId = new Guid("b8ce006b-3fad-4930-ac76-d1e7e975c2ff"),
                            FormatId = new Guid("675c1a01-426c-4484-a674-c21eab575325"),
                            ImagePath = "PrincessBride.jpg",
                            Quantity = 4,
                            RatingId = new Guid("d8bfa1c3-9b50-46fc-a5c3-41515dca6b7a"),
                            Title = "The Princess Bride"
                        },
                        new
                        {
                            Id = new Guid("7146eb5a-6d0e-4271-9c94-08a4f00a25d2"),
                            Cost = 10.5,
                            Description = "Indiana Jones and the Last Crusade is a 1989 American action-adventure film directed by Steven Spielberg, from a story co-written by executive producer George Lucas.",
                            DirectorId = new Guid("70c60603-ea68-4bdd-a41f-98aa3376cc48"),
                            FormatId = new Guid("675c1a01-426c-4484-a674-c21eab575325"),
                            ImagePath = "IndianaJonesLastCrusade.jpg",
                            Quantity = 2,
                            RatingId = new Guid("217630a3-6d8a-49bb-9ccf-90321f634845"),
                            Title = "Indiana Jones and the Last Crusade"
                        },
                        new
                        {
                            Id = new Guid("5d9313c7-320f-423c-a773-4d3edbe3108e"),
                            Cost = 7.5,
                            Description = "Star Wars: Episode IV – A New Hope is a 1977 American epic space-opera film written and directed by George Lucas, produced by Lucasfilm and distributed by 20th Century Fox.",
                            DirectorId = new Guid("b1e9807d-0ca3-42ac-a24e-fb9f2d37a79a"),
                            FormatId = new Guid("77551c26-daad-4bd6-9953-004989ba4f40"),
                            ImagePath = "StarWarsNewHope.jpg",
                            Quantity = 1,
                            RatingId = new Guid("b9431834-b4a7-4331-b27b-d7b87bcc163a"),
                            Title = "Star Wars: Episode IV – A New Hope"
                        },
                        new
                        {
                            Id = new Guid("1498286f-5a42-454e-a1f2-b1b7263df6c9"),
                            Cost = 9.9900000000000002,
                            Description = "Pale Rider is a 1985 American Western film produced and directed by Clint Eastwood, who also stars in the lead role.",
                            DirectorId = new Guid("b1e9807d-0ca3-42ac-a24e-fb9f2d37a79a"),
                            FormatId = new Guid("77551c26-daad-4bd6-9953-004989ba4f40"),
                            ImagePath = "PaleRider.jpg",
                            Quantity = 1,
                            RatingId = new Guid("b9431834-b4a7-4331-b27b-d7b87bcc163a"),
                            Title = "Pale Rider"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblMovieGenre_Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblMovieGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("117515c5-8353-4dfb-9734-1dc90ecfb2d8"),
                            GenreId = new Guid("b35d5db0-babc-4e50-bf2c-d1fe268e5118"),
                            MovieId = new Guid("3d370bd2-7387-44cc-b5af-53ed5dda59f1")
                        },
                        new
                        {
                            Id = new Guid("4fdafdce-804c-4fd9-a185-28c8f87b4c4e"),
                            GenreId = new Guid("9e200592-0399-4e36-9e91-306ed9a5d38b"),
                            MovieId = new Guid("3d370bd2-7387-44cc-b5af-53ed5dda59f1")
                        },
                        new
                        {
                            Id = new Guid("95f74758-447d-4145-a045-003d4279de77"),
                            GenreId = new Guid("f50e39e2-6653-45c8-9fa6-49382578ae6c"),
                            MovieId = new Guid("3d370bd2-7387-44cc-b5af-53ed5dda59f1")
                        },
                        new
                        {
                            Id = new Guid("5786a156-545b-4fe4-bf63-c77413615ca2"),
                            GenreId = new Guid("b35d5db0-babc-4e50-bf2c-d1fe268e5118"),
                            MovieId = new Guid("e2e500e2-042e-4753-978e-1f689c71de62")
                        },
                        new
                        {
                            Id = new Guid("e5158029-742e-4006-ae2c-21c4081cc46a"),
                            GenreId = new Guid("9e200592-0399-4e36-9e91-306ed9a5d38b"),
                            MovieId = new Guid("e2e500e2-042e-4753-978e-1f689c71de62")
                        },
                        new
                        {
                            Id = new Guid("18eac644-f5fd-48c4-9952-8fd04d8ac0f3"),
                            GenreId = new Guid("0bcfcc24-7d24-47ea-8573-5dcdd8a35db6"),
                            MovieId = new Guid("8ece9ad5-9bba-4596-8a81-a761322e1700")
                        },
                        new
                        {
                            Id = new Guid("9adc122e-b3b1-448b-b3d9-652531b31a77"),
                            GenreId = new Guid("b4c7ff04-7c46-41e3-949b-56bad56f4829"),
                            MovieId = new Guid("8ece9ad5-9bba-4596-8a81-a761322e1700")
                        },
                        new
                        {
                            Id = new Guid("cd5d8062-8bb9-44c2-9fa6-dd8ed0af156d"),
                            GenreId = new Guid("f50e39e2-6653-45c8-9fa6-49382578ae6c"),
                            MovieId = new Guid("8ece9ad5-9bba-4596-8a81-a761322e1700")
                        },
                        new
                        {
                            Id = new Guid("30818342-083e-4abe-b242-a882ff1ff189"),
                            GenreId = new Guid("9e200592-0399-4e36-9e91-306ed9a5d38b"),
                            MovieId = new Guid("7146eb5a-6d0e-4271-9c94-08a4f00a25d2")
                        },
                        new
                        {
                            Id = new Guid("88ab6549-be09-4a32-b770-356f1bf4b1c3"),
                            GenreId = new Guid("f50e39e2-6653-45c8-9fa6-49382578ae6c"),
                            MovieId = new Guid("7146eb5a-6d0e-4271-9c94-08a4f00a25d2")
                        },
                        new
                        {
                            Id = new Guid("e9317878-875b-4ce6-a46d-06e534e47e87"),
                            GenreId = new Guid("9e200592-0399-4e36-9e91-306ed9a5d38b"),
                            MovieId = new Guid("5d9313c7-320f-423c-a773-4d3edbe3108e")
                        },
                        new
                        {
                            Id = new Guid("0de8b1b4-1407-4b19-b708-3611ebb5a0d3"),
                            GenreId = new Guid("517c8cb2-cfb5-4dda-b3eb-9d04840ba8c5"),
                            MovieId = new Guid("5d9313c7-320f-423c-a773-4d3edbe3108e")
                        },
                        new
                        {
                            Id = new Guid("b877ceea-4096-4fff-9b4e-7e0fb408b155"),
                            GenreId = new Guid("d7b28d30-4f84-4530-9003-682c280ee35c"),
                            MovieId = new Guid("1498286f-5a42-454e-a1f2-b1b7263df6c9")
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("tblCustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblOrder_Id");

                    b.HasIndex("tblCustomerId");

                    b.ToTable("tblOrder", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2de42f75-03fd-4fa4-bbb4-1ea96cd62773"),
                            CustomerId = new Guid("489c9a88-15cf-4874-8a4b-a8120f4a3a69"),
                            OrderDate = new DateTime(2017, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2017, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("f17436a8-c5eb-45d8-9e2f-d1fe47605788")
                        },
                        new
                        {
                            Id = new Guid("cf8b49a1-50c2-4f18-b687-80453e18e471"),
                            CustomerId = new Guid("5fe58522-a21f-44b2-93b7-48c1d0f60bd2"),
                            OrderDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("f17436a8-c5eb-45d8-9e2f-d1fe47605788")
                        },
                        new
                        {
                            Id = new Guid("74c5e1b0-fa53-456e-8864-18c79a27b182"),
                            CustomerId = new Guid("5fe58522-a21f-44b2-93b7-48c1d0f60bd2"),
                            OrderDate = new DateTime(2022, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2022, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("f065f2ba-3d3d-48e0-98f2-7e5f52c75852")
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblOrderItem_Id");

                    b.ToTable("tblOrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ce65324-197b-45ef-8e77-65fb17731f8e"),
                            Cost = 8.9900000000000002,
                            MovieId = new Guid("3d370bd2-7387-44cc-b5af-53ed5dda59f1"),
                            OrderId = new Guid("2de42f75-03fd-4fa4-bbb4-1ea96cd62773"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("f8d3d87c-dcd7-4d75-a164-2c4010a63bea"),
                            Cost = 9.9900000000000002,
                            MovieId = new Guid("e2e500e2-042e-4753-978e-1f689c71de62"),
                            OrderId = new Guid("2de42f75-03fd-4fa4-bbb4-1ea96cd62773"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("5d5206d8-b489-4908-a3c3-b9e422b3c455"),
                            Cost = 10.99,
                            MovieId = new Guid("e2e500e2-042e-4753-978e-1f689c71de62"),
                            OrderId = new Guid("cf8b49a1-50c2-4f18-b687-80453e18e471"),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblRating_Id");

                    b.ToTable("tblRating", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("692c95fc-44cc-49ad-9719-26ca9e0cf84f"),
                            Description = "G"
                        },
                        new
                        {
                            Id = new Guid("b9431834-b4a7-4331-b27b-d7b87bcc163a"),
                            Description = "PG-13"
                        },
                        new
                        {
                            Id = new Guid("d8bfa1c3-9b50-46fc-a5c3-41515dca6b7a"),
                            Description = "PG"
                        },
                        new
                        {
                            Id = new Guid("217630a3-6d8a-49bb-9ccf-90321f634845"),
                            Description = "R"
                        },
                        new
                        {
                            Id = new Guid("2a041ea5-93be-4bb6-a375-4010143b05cd"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6613b086-b951-43e2-b907-33b7f887d2e8"),
                            FirstName = "Steve",
                            LastName = "Marin",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "smarin"
                        },
                        new
                        {
                            Id = new Guid("f17436a8-c5eb-45d8-9e2f-d1fe47605788"),
                            FirstName = "John",
                            LastName = "Doro",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("f065f2ba-3d3d-48e0-98f2-7e5f52c75852"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "bfoote"
                        });
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblDirector", "Director")
                        .WithMany("tblMovies")
                        .HasForeignKey("DirectorId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_DirectorId");

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblFormat", "Format")
                        .WithMany("tblMovies")
                        .HasForeignKey("FormatId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_FormatId");

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblRating", "Rating")
                        .WithMany("tblMovies")
                        .HasForeignKey("RatingId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_RatingId");

                    b.Navigation("Director");

                    b.Navigation("Format");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblGenre", "Genre")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_GenreId");

                    b.HasOne("CG.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_MovieId");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.HasOne("CG.DVDCentral.PL2.Entities.tblCustomer", null)
                        .WithMany("Orders")
                        .HasForeignKey("tblCustomerId");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("CG.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Navigation("tblMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
